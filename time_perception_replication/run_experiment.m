function results = run_experiment(directory_link, save_after, participant_number, ...
    background_color, num_breaks, num_training_trials, replication_type, stimulus_type, durations, ...
    num_trials, white, grey, black, window, screenXpixels, screenYpixels)
    % FIXME: If failed at any time, do the exit sequence

    [est_time, num_trials, results, exp_condition_list, train_condition_list, break_times] = setup_task(stimulus_type, durations, num_trials, num_training_trials, num_breaks);

    if background_color == "grey"
        back_color = grey;
    else
        back_color = white;
    end
    
    display_screen_text('Thank you for your interest in participating in this experiment. \n \n Press the spacebar to continue.', ...
            window, ...
            back_color, ... 
            black, ...
            screenXpixels);

    display_screen_text('You will begin with several practice trials to get used to the task. You can press the escape key at any time to exit the experiment. \n \n Press the spacebar to continue.', ...
            window, ...
            back_color, ... 
            black, ...
            screenXpixels);

    % Task specific instructions 
    run_experiment_intro(replication_type, window, back_color, black, screenXpixels);

    % Run training trials
    for trial_counter=1:length(train_condition_list)
        condition_num = train_condition_list(trial_counter);
        [stimulus, duration] = find_condition(stimulus_type, durations, condition_num);
        run_trial(stimulus, duration, replication_type, back_color, black, directory_link, window, screenYpixels, screenXpixels);
    end


    % Segway into the experiment.
    display_screen_text('You have completed the training segment. \n \n Press the spacebar to continue.', ...
            window, ...
            back_color, ... 
            black, ...
            screenXpixels);
    display_screen_text('There will be several breaks built into the experiment session. If you have any questions, please call the proctor into the room.   \n \n Press the spacebar to continue. ', ...
            window, ...
            back_color, ... 
            black, ...
            screenXpixels);
    display_screen_text('Press the spacebar to begin.', ...
            window, ...
            back_color, ... 
            black, ...
            screenXpixels);
    
   % Run experiment. Breaks Included When Necessary
    break_statement = 'You may now take a break. \n \n Press the spacebar to continue the session.';
    for trial_counter=1:num_trials
        if mod(trial_counter, save_after) == 0                                                                            
            if exist(char(directory_link + "/P" + string(participant_number + "/dataP" + string(participant_number))), 'file')~=0
                delete(char(directory_link + "/P" + string(participant_number + "/dataP" + string(participant_number))));
            end
            writetable(results, char(directory_link + "/P" + string(participant_number + "/dataP" + string(participant_number))))
        end
        condition_num = exp_condition_list(trial_counter);
        [stimulus, duration] = find_condition(stimulus_type, durations, condition_num);
        [stimulus, duration, response] = run_trial(stimulus, duration, replication_type, back_color, black, directory_link, window, screenYpixels, screenXpixels);
        results.Image1(trial_counter) = stimulus;
        results.Time_Condition(trial_counter) = duration;
        results.Response(trial_counter) = response;
        if any(break_times == trial_counter)
            display_screen_text(break_statement, ...
            window, ...
            back_color, ... 
            black, ...
            screenXpixels);
        end
    end
    
    % Saving data table
    if exist(char(directory_link + "/P" + string(participant_number + "/dataP" + string(participant_number))), 'file')~=0
                delete(char(directory_link + "/P" + string(participant_number + "/dataP" + string(participant_number))));
    end
    writetable(results, char(directory_link + "/P" + string(participant_number + "/dataP" + string(participant_number))))
        

    % Experiment outro
    end_statement = 'You have completed the experiment! \n \n Call the proctor into the room.';
    display_screen_text(end_statement, ...
            window, ...
            back_color, ... 
            black, ...
            screenXpixels);

    % Press the spacebar to continue and exit the experiment screen. 
    % End experiment. Exit screen.
    Screen('Close', window);
end